{"version":3,"sources":["api/contact/contact.controller.js"],"names":["syncContact","handleError","res","argStatusCode","err","error","statusCode","status","send","updateContacts","contacts","userId","groupId","contact","shift","name","number","email","birthday","where","Contact","find","then","item","update","resolve","create","x","contactId","id","created","GroupContact","catch","req","body","json","message","Group","findOrCreate","user","group","end","console","log"],"mappings":"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","file":"contact.controller.js","sourcesContent":["import logger from '../../components/logger';\nimport db from '../../conn/sqldb';\n\nfunction handleError(res, argStatusCode, err) {\n  logger.error('user.controller', err);\n  const statusCode = argStatusCode || 500;\n  res.status(statusCode).send(err);\n}\n\nfunction updateContacts({ contacts, userId, groupId }) {\n  const contact = contacts.shift();\n  if (contact) {\n    const { name, number, email, birthday } = contact;\n    const where = { userId };\n    if (number) where.number = number;\n    if (email) where.email = email;\n    return db.Contact.find({ where })\n      .then(item => (item\n        ? item.update({ name, email, birthday }).then(() => Promise.resolve([item, false]))\n        : db.Contact\n          .create({ name, number, userId, email, birthday })\n          .then(x => Promise.resolve([x, true]))))\n      .then(([{ id: contactId }, created]) => (created\n        ? db.GroupContact.create({ groupId, contactId })\n        : Promise.resolve()))\n      .then(() => updateContacts({ contacts, userId, groupId }))\n      .catch(() => updateContacts({ contacts, userId, groupId }));\n  }\n  return Promise.resolve();\n}\n\nexport function syncContact(req, res) {\n  const { name, contacts } = req.body;\n  if (!name || !contacts) return res.status(500).json({ message: 'Invalid Request' });\n  db.Group\n    .findOrCreate({ where: { name, userId: req.user.id } })\n    .then(([group]) => updateContacts({ contacts, userId: req.user.id, groupId: group.id }))\n    .then(() => res.end())\n    .catch(err => console.log(err));\n  return res.end();\n}\n"]}