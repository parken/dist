{"version":3,"sources":["api/contact/contact.controller.js"],"names":["syncContact","handleError","res","argStatusCode","err","error","statusCode","status","send","updateContacts","contacts","userId","groupId","contact","shift","name","number","Contact","find","where","then","item","update","resolve","create","contactId","id","GroupContact","data","catch","req","body","json","message","Group","findOrCreate","user","group","end","console","log"],"mappings":";;;;;;;;;;;;;;QA0BgBA,W,GAAAA,W;;AA1BhB;;;;AACA;;;;;;AAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,aAA1B,EAAyCC,GAAzC,EAA8C;AAC5C,mBAAOC,KAAP,CAAa,iBAAb,EAAgCD,GAAhC;AACA,MAAME,aAAaH,iBAAiB,GAApC;AACAD,MAAIK,MAAJ,CAAWD,UAAX,EAAuBE,IAAvB,CAA4BJ,GAA5B;AACD;;AAED,SAASK,cAAT,OAAuD;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACrD,MAAMC,UAAUH,SAASI,KAAT,EAAhB;AACA,MAAID,OAAJ,EAAa;AAAA,QACHE,IADG,GACcF,OADd,CACHE,IADG;AAAA,QACGC,MADH,GACcH,OADd,CACGG,MADH;;AAEX,WAAO,gBAAGC,OAAH,CAAWC,IAAX,CAAgB,EAAEC,OAAO,EAAEH,cAAF,EAAUL,cAAV,EAAT,EAAhB,EACJS,IADI,CACC;AAAA,aAASC,OACXA,KAAKC,MAAL,CAAY,EAAEP,UAAF,EAAZ,EAAsBK,IAAtB,CAA2B;AAAA,eAAM,kBAAQG,OAAR,CAAgBF,IAAhB,CAAN;AAAA,OAA3B,CADW,GAEX,gBAAGJ,OAAH,CAAWO,MAAX,CAAkB,EAAET,UAAF,EAAQC,cAAR,EAAgBL,cAAhB,EAAlB,CAFE;AAAA,KADD,EAIJS,IAJI,CAIC;AAAA,UAAOK,SAAP,SAAGC,EAAH;AAAA,aAAuB,gBAAGC,YAAH,CAC1BT,IAD0B,CACrB,EAAEC,OAAO,EAAEP,gBAAF,EAAWa,oBAAX,EAAT,EADqB,EAE1BL,IAF0B,CAErB;AAAA,eAASQ,OAAO,kBAAQL,OAAR,EAAP,GAA2B,gBAAGI,YAAH,CAAgBH,MAAhB,CAAuB,EAAEZ,gBAAF,EAAWa,oBAAX,EAAvB,CAApC;AAAA,OAFqB,CAAvB;AAAA,KAJD,EAOJL,IAPI,CAOC;AAAA,aAAMX,eAAe,EAAEC,kBAAF,EAAYC,cAAZ,EAAoBC,gBAApB,EAAf,CAAN;AAAA,KAPD,EAQJiB,KARI,CAQE;AAAA,aAAMpB,eAAe,EAAEC,kBAAF,EAAYC,cAAZ,EAAoBC,gBAApB,EAAf,CAAN;AAAA,KARF,CAAP;AASD;AACD,SAAO,kBAAQW,OAAR,EAAP;AACD;;AAEM,SAASvB,WAAT,CAAqB8B,GAArB,EAA0B5B,GAA1B,EAA+B;AAAA,kBACT4B,IAAIC,IADK;AAAA,MAC5BhB,IAD4B,aAC5BA,IAD4B;AAAA,MACtBL,QADsB,aACtBA,QADsB;;AAEpC,MAAI,CAACK,IAAD,IAAS,CAACL,QAAd,EAAwB,OAAOR,IAAIK,MAAJ,CAAW,GAAX,EAAgByB,IAAhB,CAAqB,EAAEC,SAAS,iBAAX,EAArB,CAAP;AACxB,kBAAGC,KAAH,CACGC,YADH,CACgB,EAAEhB,OAAO,EAAEJ,UAAF,EAAQJ,QAAQmB,IAAIM,IAAJ,CAASV,EAAzB,EAAT,EADhB,EAEGN,IAFH,CAEQ;AAAA;AAAA,QAAEiB,KAAF;;AAAA,WAAa5B,eAAe,EAAEC,kBAAF,EAAYC,QAAQmB,IAAIM,IAAJ,CAASV,EAA7B,EAAiCd,SAASyB,MAAMX,EAAhD,EAAf,CAAb;AAAA,GAFR,EAGGN,IAHH,CAGQ;AAAA,WAAMlB,IAAIoC,GAAJ,EAAN;AAAA,GAHR,EAIGT,KAJH,CAIS;AAAA,WAAOU,QAAQC,GAAR,CAAYpC,GAAZ,CAAP;AAAA,GAJT;AAKA,SAAOF,IAAIoC,GAAJ,EAAP;AACD","file":"contact.controller.js","sourcesContent":["import logger from '../../components/logger';\nimport db from '../../conn/sqldb';\n\nfunction handleError(res, argStatusCode, err) {\n  logger.error('user.controller', err);\n  const statusCode = argStatusCode || 500;\n  res.status(statusCode).send(err);\n}\n\nfunction updateContacts({ contacts, userId, groupId }) {\n  const contact = contacts.shift();\n  if (contact) {\n    const { name, number } = contact;\n    return db.Contact.find({ where: { number, userId } })\n      .then(item => (item\n        ? item.update({ name }).then(() => Promise.resolve(item))\n        : db.Contact.create({ name, number, userId })))\n      .then(({ id: contactId }) => db.GroupContact\n        .find({ where: { groupId, contactId } })\n        .then(data => (data ? Promise.resolve() : db.GroupContact.create({ groupId, contactId }))))\n      .then(() => updateContacts({ contacts, userId, groupId }))\n      .catch(() => updateContacts({ contacts, userId, groupId }));\n  }\n  return Promise.resolve();\n}\n\nexport function syncContact(req, res) {\n  const { name, contacts } = req.body;\n  if (!name || !contacts) return res.status(500).json({ message: 'Invalid Request' });\n  db.Group\n    .findOrCreate({ where: { name, userId: req.user.id } })\n    .then(([group]) => updateContacts({ contacts, userId: req.user.id, groupId: group.id }))\n    .then(() => res.end())\n    .catch(err => console.log(err));\n  return res.end();\n}\n"]}