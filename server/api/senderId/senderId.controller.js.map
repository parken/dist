{"version":3,"sources":["api/senderId/senderId.controller.js"],"names":["create","deleteSenderId","index","show","approve","block","createXls","handleError","res","argStatusCode","err","error","statusCode","status","send","notifyAdminSenderIdApproval","senderId","User","find","where","admin","then","user","reject","message","text","name","company","PLAY_URL","id","userId","req","SenderId","findAll","attributes","body","createdBy","senderIds","userSenderId","filter","x","json","length","updatedBy","blockedSenderId","approvedSenderId","catch","destroy","params","data","query","fl","promise","resolve","loginUrl","origin","users","senderIdStatusId","$not","map","$and","split","include","model","as","update","end","next","wb","Workbook","ws","addWorksheet","cell","string","forEach","item","i","write"],"mappings":"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","file":"senderId.controller.js","sourcesContent":["import xl from 'excel4node';\nimport logger from '../../components/logger';\nimport config from '../../config/environment';\nimport { notifyOnUserChannel } from '../../components/notify';\nimport db from '../../conn/sqldb';\n\nfunction handleError(res, argStatusCode, err) {\n  logger.error('user.controller', err);\n  const statusCode = argStatusCode || 500;\n  res.status(statusCode).send(err);\n}\n\nfunction notifyAdminSenderIdApproval(senderId) {\n  return db.User.find({ where: { admin: 2 } })\n    .then((user) => {\n      if (!user) return Promise.reject({ message: 'No admin user found' });\n      const text = `Request to approve ${senderId.name} - ${senderId.company}. ${\n        config.PLAY_URL}/senderId/${senderId.id}`;\n      return notifyOnUserChannel({ userId: user.id, text });\n    });\n}\n\nexport function create(req, res) {\n  return db.SenderId\n    .findAll({\n      attributes: ['id', 'status', 'createdBy'],\n      where: { name: req.body.name, createdBy: req.user.id },\n    }).then((senderIds) => {\n      const userSenderId = senderIds.filter(x => (x.createdBy === req.user.id))[0];\n      if (userSenderId) {\n        if (userSenderId.status === 1) {\n          return res.json({ message: 'Approval Pending.' });\n        }\n        if (userSenderId.status === 2) {\n          return res.status(500).json({ message: 'Blocked.' });\n        }\n        return res.status(500).json({ message: 'Duplicate' });\n      }\n      if (!senderIds.length) {\n        return db.SenderId.create(Object\n          .assign({}, req.body, { createdBy: req.user.id, updatedBy: req.user.id }))\n          .then((senderId) => {\n            notifyAdminSenderIdApproval(senderId);\n            return res.json({ message: 'success' });\n          });\n      }\n      const blockedSenderId = senderIds.filter(x => (x.status === 3))[0];\n      const approvedSenderId = senderIds.filter(x => (x.status === 2))[0];\n      if (!blockedSenderId && approvedSenderId) {\n        return db.SenderId.create(Object.assign(\n          { status: approvedSenderId.status },\n          req.body,\n          { createdBy: req.user.id, updatedBy: req.user.id }))\n          .then((senderId) => {\n            notifyAdminSenderIdApproval(senderId);\n            return res.json({ message: 'success' });\n          });\n      }\n      return db.SenderId.create(Object.assign(\n        {},\n        req.body,\n        { createdBy: req.user.id, updatedBy: req.user.id }))\n        .then((senderId) => {\n          notifyAdminSenderIdApproval(senderId);\n          return res.json({ message: 'success' });\n        });\n    })\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function deleteSenderId(req, res) {\n  return db.SenderId.destroy({ where: { id: req.params.id } })\n    .then(data => res.json(data))\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function index(req, res) {\n  const { status, fl } = req.query;\n  let promise;\n  if (req.user.admin === 2) {\n    promise = Promise.resolve();\n  } else if (req.user.admin) {\n    promise = db.User.findAll({ attributes: ['id'], where: { loginUrl: req.origin } });\n  } else {\n    promise = Promise.resolve([req.user]);\n  }\n  return promise\n    .then((users) => {\n      const where = { senderIdStatusId: { $not: 3 } };\n      if (users) where.createdBy = users.map(x => x.id);\n      if (status) where.$and = { senderIdStatusId: status.split(',') };\n      return db.SenderId.findAll({\n        attributes: fl ? fl.split(',') : ['id', 'name'],\n        where,\n        include: [{\n          model: db.User,\n          as: 'CreatedBy',\n          attributes: ['id', 'name', 'admin'],\n        }] })\n        .then(data => res.json(data));\n    })\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function show(req, res) {\n  let promise;\n  if (req.user.admin === 2) {\n    promise = Promise.resolve();\n  } else if (req.user.admin) {\n    promise = db.User.findAll({ attributes: ['id'], where: { loginUrl: req.origin } });\n  } else {\n    promise = Promise.resolve([req.user]);\n  }\n  return promise\n    .then((users) => {\n      const where = { id: req.params.id };\n      if (users) where.createdBy = users.map(x => x.id);\n      return db.SenderId.find({\n        where,\n        include: [{\n          model: db.User,\n          as: 'CreatedBy',\n          attributes: ['id', 'name', 'admin'],\n        }] })\n        .then(data => res.json(data));\n    })\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function approve(req, res) {\n  return db.SenderId.update({ status: true }, { where: { id: req.params.id } })\n    .then(() => res.status(202).end())\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function block(req, res) {\n  return db.SenderId.update({ status: false }, { where: { id: req.params.id } })\n    .then(() => res.status(202).end())\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function createXls(req, res, next) {\n  return db.SenderId\n    .findAll({})\n    .then((data) => {\n      const senderId = data.map(x => x.name);\n      const wb = new xl.Workbook();\n      const ws = wb.addWorksheet('Sheet 1');\n      ws.cell(1, 1).string('Sender Ids');\n      senderId.forEach((item, i) => {\n        ws.cell(i + 2, 1).string(item);\n      });\n      wb.write('Excel.xlsx', res);\n    })\n    .catch(next);\n}\n"]}