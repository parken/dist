{"version":3,"sources":["api/shipment/inShipment/inShipment.controller.js"],"names":["index","show","create","update","destroy","req","res","next","query","limit","offset","fl","where","options","attributes","split","Number","reduce","nxt","x","key","value","shipmentId","params","all","InShipment","findAll","count","then","routes","numFound","json","items","meta","catch","findById","id","route","body","createdBy","user","updatedBy","status","active","end","destory"],"mappings":"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","file":"inShipment.controller.js","sourcesContent":["import db from '../../../conn/sqldb';\n\nexport function index(req, res, next) {\n  const { limit = 20, offset = 0, fl, where } = req.query;\n\n  const options = {\n    where: {},\n    attributes: fl ? fl.split(',') : ['id', 'seller'],\n    limit: Number(limit),\n    offset: Number(offset),\n  };\n\n  if (where) {\n    options.where = where.split(',').reduce((nxt, x) => {\n      const [key, value] = x.split(':');\n      return Object.assign(nxt, { [key]: value });\n    }, {});\n  }\n\n  options.where.shipmentId = req.params.shipmentId;\n\n  return Promise\n    .all([\n      db.InShipment\n        .findAll(options),\n      db.InShipment\n        .count(),\n    ])\n    .then(([routes, numFound]) => res.json({ items: routes, meta: { numFound } }))\n    .catch(next);\n}\n\nexport function show(req, res, next) {\n  return db.InShipment\n    .findById(req.params.id)\n    .then(route => res.json(route))\n    .catch(next);\n}\n\nexport function create(req, res, next) {\n  return db.InShipment\n    .create(Object.assign({}, req.body, {\n      createdBy: req.user.id,\n      updatedBy: req.user.id,\n    }))\n    .then(({ id }) => res.status(201).json({ id }))\n    .catch(next);\n}\n\nexport function update(req, res, next) {\n  return db.InShipment\n    .update(\n      Object.assign({}, req.body, {\n        active: false,\n        updatedBy: req.user.id,\n      }),\n      { where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\nexport function destroy(req, res, next) {\n  return db.InShipment\n    .destory({ where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\n"]}