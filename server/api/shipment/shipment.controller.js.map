{"version":3,"sources":["api/shipment/shipment.controller.js"],"names":["index","show","create","update","destroy","req","res","next","query","limit","offset","fl","where","options","attributes","split","Number","include","model","User","reduce","nxt","x","key","value","all","Shipment","findAll","count","then","shipments","numFound","json","items","meta","catch","findById","params","id","shipment","body","createdBy","user","updatedBy","status","active","end","destory"],"mappings":"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","file":"shipment.controller.js","sourcesContent":["import db from '../../conn/sqldb';\n\nexport function index(req, res, next) {\n  const { limit = 20, offset = 0, fl, where } = req.query;\n\n  const options = {\n    attributes: fl ? fl.split(',') : ['id', 'userId'],\n    limit: Number(limit),\n    offset: Number(offset),\n    include: [{\n      model: db.User,\n      attributes: ['id', 'name'],\n    }],\n  };\n\n  if (where) {\n    options.where = where.split(',').reduce((nxt, x) => {\n      const [key, value] = x.split(':');\n      return Object.assign(nxt, { [key]: value });\n    }, {});\n  }\n\n  return Promise\n    .all([\n      db.Shipment\n        .findAll(options),\n      db.Shipment\n        .count(),\n    ])\n    .then(([shipments, numFound]) => res\n      .json({\n        items: shipments,\n        meta: { numFound } }))\n    .catch(next);\n}\n\nexport function show(req, res, next) {\n  return db.Shipment\n    .findById(req.params.id)\n    .then(shipment => res.json(shipment))\n    .catch(next);\n}\n\nexport function create(req, res, next) {\n  return db.Shipment\n    .create(Object.assign({}, req.body, {\n      createdBy: req.user.id,\n      updatedBy: req.user.id,\n    }))\n    .then(({ id }) => res.status(201).json({ id }))\n    .catch(next);\n}\n\nexport function update(req, res, next) {\n  return db.Shipment\n    .update(\n      Object.assign({}, req.body, {\n        active: false,\n        updatedBy: req.user.id,\n      }),\n      { where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\nexport function destroy(req, res, next) {\n  return db.Shipment\n    .destory({ where: { id: req.params.id } })\n    .then(() => res.status(201).end())\n    .catch(next);\n}\n\n"]}