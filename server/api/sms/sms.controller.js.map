{"version":3,"sources":["api/sms/sms.controller.js"],"names":["show","create","createExcel","schema","sms_types","routes","PLAIN","UNICODE","PROMOTIONAL","TRASACTIONAL","SENDER_ID","OTP","sendSms","text","list","to","shift","then","catch","resolve","req","res","json","id","next","body","groupId","numbers","campaign","routeId","unicode","flash","senderId","scheduledOn","status","message","sendingTime","Date","getHours","route_id","user","groupIds","MessageFly","findAll","include","SenderId","Route","Campaign","wb","Workbook","ws","addWorksheet","cell","string","data","forEach","item","i","number","total","bool","name","write","console","log","err"],"mappings":"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","file":"sms.controller.js","sourcesContent":["import xl from 'excel4node';\nimport Ajv from 'ajv';\n\nimport db from '../../conn/sqldb';\n\nimport logger from '../../components/logger';\nimport { sms } from '../../components/notify';\nimport SenderId from '../../components/senderId';\nimport SmsManager from '../../components/smsManager';\n\nimport constants from '../../config/constants'\n\nimport * as schema from './sms.schema';\n\nconst { sms_types, routes } = constants;\nconst { PLAIN, UNICODE } = sms_types;\nconst { PROMOTIONAL, TRASACTIONAL, SENDER_ID, OTP } = routes;\n\nfunction sendSms(text, list) {\n  const to = list.shift();\n  if (to) {\n    return sms({ to, text })\n      .then(() => sendSms(text, list))\n      .catch(() => sendSms(text, list));\n  }\n  return Promise.resolve();\n}\n\nexport function show(req, res) {\n  return res.json({ id: 1 });\n}\n\nexport function create(req, res, next) {\n  const {\n    groupId,\n    numbers,\n    text,\n    campaign,\n    routeId,\n    unicode = false,\n    flash = false,\n    senderId,\n    scheduledOn,\n  } = req.body;\n\n  if (!routeId || !text) {\n    return res.status(400).status({ message: 'arguements missing. (route_id or message)' });\n  }\n\n  // const validate = () => {\n  //   const ajv = new Ajv();\n  //   let current;\n  //   if(body.route_id === PROMOTIONAL) {\n  //     current = schema.promotionalSMS;\n  //   } else {\n  //     current = schema.anySMS;\n  //   }\n  //\n  //   ajv.addSchema(current, 'CurrentSchema');\n  //   ajv.validate('CurrentSchema', req.body);\n  //   return ajv.errorsText();\n  // };\n  //\n  // const err = validate(req.body);\n  //\n  // if (!err) return res.status(400).json({ message: err });\n  // return res.status(201).json({ id: 1 });\n\n  const sendingTime = (scheduledOn ? new Date(scheduledOn) : new Date()).getHours();\n\n  if (req.body.route_id === PROMOTIONAL && sendingTime >= 9 && sendingTime < 21) {\n    return res.status(400).json({ message: 'Promotional SMS is allowed from 9AM to 9PM' });\n  }\n\n  return SmsManager.sendSms({ text, user: req.user, routeId, senderId, campaign, unicode,\n    flash, scheduledOn, numbers, groupIds: groupId })\n    .then(() => res.json({ message: 'Messages Sent.' }))\n    .catch(next);\n}\n\nexport function createExcel(req, res, next) {\n  return db.MessageFly\n    .findAll({\n      include: [db.SenderId, db.Route, db.Campaign],\n    })\n    .then(data => {\n      const wb = new xl.Workbook();\n      const ws = wb.addWorksheet('Sheet 1');\n      ws.cell(1, 1).string('Text');\n      ws.cell(1, 2).string('groupIds');\n      ws.cell(1, 3).string('numbers');\n      ws.cell(1, 4).string('total');\n      ws.cell(1, 5).string('unicode');\n      ws.cell(1, 6).string('flash');\n      ws.cell(1, 7).string('scheduledOn');\n      ws.cell(1, 8).string('routeId');\n      ws.cell(1, 9).string('senderId');\n      ws.cell(1, 10).string('campaignId');\n      data.forEach((item, i) => {\n        ws.cell(i + 2, 1).string(item.text || '');\n        ws.cell(i + 2, 2).string(item.groupIds || '');\n        ws.cell(i + 2, 3).string(item.numbers || '');\n        ws.cell(i + 2, 4).number(item.total);\n        ws.cell(i + 2, 5).bool(item.unicode);\n        ws.cell(i + 2, 6).bool(item.flash);\n        ws.cell(i + 2, 7).string(item.scheduledOn || '');\n        ws.cell(i + 2, 8).string(item.Route.name);\n        ws.cell(i + 2, 9).string(item.SenderId.name);\n        ws.cell(i + 2, 10).string(item.Campaign.name);\n      });\n      wb.write('Excel.xlsx', res);\n    })\n    .catch(err => console.log(err));\n}\n"]}