{"version":3,"sources":["api/user/user.controller.js"],"names":["me","index","show","showUuid","create","createCustomer","signup","login","refresh","logout","duplicate","update","checkExists","otpLogin","otpSend","otpVerify","passwordChange","sendLogin","loginUid","addSellingRootUser","addSelling","req","res","next","all","User","findById","user","id","attributes","raw","Route","findAll","then","u","upstreams","json","catch","data","roleId","find","where","params","LoginIdentifier","uuid","include","model","required","loginIdentifier","status","message","body","mobile","length","supportMobile","groupId","createdBy","otp","Math","floor","random","email","resolve","name","password","error_description","otpStatus","error","err","end","getApp","code","AuthCode","auth_code","App","authCode","toJSON","app","options","url","OAUTH_SERVER","OAUTH_ENDPOINT","auth","clientId","pass","clientSecret","headers","connection","remoteAddress","form","grant_type","redirect_uri","redirectUri","username","post","apires","statusCode","send","RefreshToken","refreshToken","refresh_token","revokeToken","access_token","up","query","count","alternateMobile","findOrCreate","newUser","text","to","$or","revokeTokens","origin","userId","routeId","limit","Selling","Number","updatedBy","sendingUserId","fromUserId"],"mappings":"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","file":"user.controller.js","sourcesContent":["import request from 'request';\n\nimport config from '../../config/environment';\nimport logger from '../../components/logger';\nimport { sms, slack } from '../../components/notify';\nimport oAuthModel from '../../components/oauth/model';\nimport { getRouteType } from '../../conn/sqldb/helper';\n\nimport db from '../../conn/sqldb';\n\n\nexport function me(req, res, next) {\n  return Promise.all([\n    db.User\n      .findById(req.user.id, {\n        attributes: ['mobile', 'email', 'name', 'id', 'roleId', 'admin'],\n        raw: 'true',\n      }),\n    db.Route.findAll(),\n  ])\n    .then(([u, upstreams]) => res.json(Object.assign(u, { upstreams })))\n    .catch(next);\n}\n\n\nexport function index(req, res, next) {\n  return db.User\n    .findAll()\n    .then(data => res.json(data))\n    .catch(next);\n}\n\nexport function show(req, res, next) {\n  switch (req.user.roleId) {\n    case 1:\n    case 2: {\n      return db.User\n        .find({\n          where: { id: req.params.id },\n          attributes: [\n            'id',\n            'name',\n            'email',\n            'mobile',\n            'supportName',\n            'supportMobile',\n            'supportEmail',\n            'loginUrl',\n          ],\n        })\n        .then(data => res.json(data))\n        .catch(next);\n    }\n    default: {\n      return db.User\n        .find({\n          where: { id: req.params.id },\n          attributes: ['id', 'name', 'email', 'mobile'],\n        })\n        .then(data => res.json(data))\n        .catch(next);\n    }\n  }\n\n}\n\nexport function showUuid(req, res, next) {\n  return db.LoginIdentifier\n    .find({\n      where: { uuid: req.params.uuid },\n      attributes: ['id'],\n      include: [{\n        model: db.User,\n        attributes: ['id', 'mobile', 'otp'],\n        required: true,\n      }],\n    })\n    .then((loginIdentifier) => {\n      if (!loginIdentifier) return res.status(404).json({ message: 'Invalid Request' });\n      return res.json(loginIdentifier.User);\n    })\n    .catch(next);\n}\n\nexport function create(req, res, next) {\n  const user = req.body;\n  if (`${user.mobile}`.length === 10) user.mobile += 910000000000;\n  if (`${user.supportMobile}`.length === 10) user.supportMobile += 910000000000;\n  user.groupId = 2;\n  user.createdBy = req.user.id;\n  return db.User\n    .create(user)\n    .then(data => res.json(data))\n    .catch(next);\n}\n\nexport function createCustomer(req, res, next) {\n  const user = req.body;\n  user.roleId = 5;\n  user.createdBy = req.user.id;\n  user.otp = Math.floor(Math.random() * 90000) + 10000;\n  delete user.id;\n  return db.User\n    .find({ where: { email: user.email, createdBy: user.createdBy, roleId: user.roleId } })\n    .then(data => (data\n      ? Promise.resolve(data)\n      : db.User.create(user)))\n    .then(data => res.json(data))\n    .catch(next);\n}\n\nexport function signup(req, res, next) {\n  const { id, name, password, otp, email } = req.body;\n  db.User.find({\n    attributes: ['id'],\n    where: { id, otp },\n  })\n    .then((u) => {\n      if (!u) return res.status(400).json({ error_description: 'Invalid OTP' });\n      u\n        .update({ otpStatus: 0, name, password, email })\n        .catch(err => logger.error('user.ctrl/otpVerify', err));\n      slack(`Signup: ${u.id}, ${u.name}, ${u.mobile}, ${u.email}`);\n      return res.status(201).end();\n    }).catch(next);\n}\n\nfunction getApp(code) {\n  return db.AuthCode.find({ where: { auth_code: code }, include: [db.App] })\n    .then(authCode => authCode.App.toJSON());\n}\n\nexport function login(req, res, next) {\n  const { code } = req.body;\n  return (code\n    ? getApp(code)\n    : db.App.findById(1, { raw: true }))\n    .then((app) => {\n      const options = {\n        url: `${config.OAUTH_SERVER}${config.OAUTH_ENDPOINT}`,\n        auth: {\n          user: app.clientId,\n          pass: app.clientSecret,\n        },\n        headers: {\n          'user-agent': req.headers['user-agent'],\n          'x-forwarded-for': req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        },\n      };\n\n      options.form = code\n        ? { grant_type: 'authorization_code', redirect_uri: `${app.redirectUri}`, code }\n        : { grant_type: 'password', username: req.body.username, password: req.body.password };\n\n      request.post(options, (err, apires, body) => {\n        if (err) return res.status(500).json({ err, body });\n        return res.status(apires.statusCode).send(body);\n      });\n    });\n}\n\nexport function refresh(req, res, next) {\n  return db.App\n    .find({\n      include: [{\n        model: db.RefreshToken,\n        where: { refreshToken: req.body.refresh_token },\n        required: true,\n      }],\n    })\n    .then((app) => {\n      if (!app) return res.status(400).json({ message: 'Invalid Token' });\n      const options = {\n        url: `${config.OAUTH_SERVER}${config.OAUTH_ENDPOINT}`,\n        auth: {\n          user: app.clientId,\n          pass: app.clientSecret,\n        },\n        form: {\n          grant_type: 'refresh_token',\n          refresh_token: req.body.refreshToken,\n        },\n        headers: {\n          'user-agent': req.headers['user-agent'],\n          'x-forwarded-for': req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        },\n      };\n      return request\n        .post(options, (err, apires, body) => {\n          if (err) return res.status(500).send(err);\n          return res.status(apires.statusCode).send(body);\n        });\n    });\n}\n\nexport function logout(req, res, next) {\n  return oAuthModel\n    .revokeToken(req.body.access_token)\n    .then(up => res.status(200).json(up))\n    .catch(next);\n}\n\nexport function duplicate(req, res, next) {\n  const mobile = `91${req.query.mobile}`;\n  return db.User\n    .count({ where: { mobile } })\n    .then(data => res.json({ mobile: !!data }))\n    .catch(next);\n}\n\nexport function update(req, res, next) {\n  const id = req.user.id || req.params.id;\n  const user = req.body;\n  delete user.id;\n  if (req.user.id) {\n    delete user.alternateMobile;\n  }\n  return db.User\n    .update(user, {\n      where: {\n        id,\n      },\n    })\n    .then(() => res.json({ id }))\n    .catch(next);\n}\n\n// Check email and phone exists\nexport function checkExists(req, res, next) {\n  return db.User\n    .checkExists(db, req.query.email, req.query.mobile)\n    .then(status => res.json(status))\n    .catch(next);\n}\n\nexport function otpLogin(req, res, next) {\n  return db.User\n    .findOrCreate({\n      where: {\n        mobile: req.body.username || req.body.mobile,\n      },\n      attributes: ['id', 'otpStatus', 'otp', 'mobile'],\n    }).then(([user, newUser]) => {\n      if (!user) {\n        return res.status(400).json({\n          message: 'User Details not matching with our records. Please contact support',\n        });\n      }\n\n      const otp = user.otpStatus === 1 && user.otp\n        ? user.otp\n        : Math.floor(Math.random() * 90000) + 10000;\n\n      const text = `${otp} is your OTP. Treat this as confidential. Sharing it with anyone gives` +\n        'them full access to your account. We never call you to verify OTP.';\n      if (user.mobile) sms({ to: user.mobile, text });\n      db.User\n        .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n        .catch(err => logger.error('user.ctrl/otp', err));\n      return res.json({ message: 'success', id: user.id, newUser });\n    }).catch(next);\n}\n\nexport function otpSend(req, res, next) {\n  db.User.find({\n    where: {\n      $or: {\n        email: req.body.username,\n        mobile: req.body.username,\n      },\n    },\n    attributes: ['id', 'otpStatus', 'otp', 'mobile'],\n  }).then((user) => {\n    if (!user) {\n      return res.status(400).json({\n        message: 'User Details not matching with our records. Please contact support',\n      });\n    }\n\n    const otp = user.otpStatus === 1 && user.otp\n      ? user.otp\n      : Math.floor(Math.random() * 90000) + 10000;\n\n    const text = `${otp} is your OTP. Treat this as confidential. Sharing it with anyone gives` +\n      'them full access to your account. We never call you to verify OTP.';\n    if (user.mobile) sms({ to: user.mobile, text });\n    db.User\n      .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n      .catch(err => logger.error('user.ctrl/otp', err));\n    return res.json({ message: 'success', id: user.id });\n  }).catch(next);\n}\n\nexport function otpVerify(req, res, next) {\n  db.User.find({\n    attributes: ['id'],\n    where: {\n      $or: [{ id: req.body.id }, { mobile: req.body.mobile }],\n      otp: req.body.otp,\n    },\n  })\n    .then((user) => {\n      if (!user) return res.status(400).json({ error_description: 'Invalid OTP' });\n      user\n        .update({ otpStatus: 0 })\n        .catch(err => logger.error('user.ctrl/otpVerify', err));\n      return res.json({ message: 'success', id: user.id });\n    }).catch(next);\n}\n\n\n// Creates a new User in the DB\nexport function passwordChange(req, res, next) {\n  return db.User.find({\n    where: {\n      id: req.body.id,\n      otp: req.body.otp,\n    },\n    attributes: ['id', 'mobile', 'email', 'name'],\n  }).then((u) => {\n    if (!u) {\n      return res\n        .status(400)\n        .json({ error: 'Invalid password', error_description: 'Invalid current password' });\n    }\n\n    return u.update({ password: req.body.password })\n      .then(() => {\n        res.status(204).end();\n        u.revokeTokens(db); // revoke all\n        const { id, name, mobile, email } = u;\n        return slack(`Password change: ${id}, ${name}, ${mobile}, ${email}`);\n      });\n  })\n    .catch(next);\n}\n\nexport function sendLogin(req, res, next) {\n  return db.User\n    .find({ where: { id: req.params.id } })\n    .then((user) => {\n      if (!user) return res.status(404).end();\n      const otp = user.otpStatus === 1 && user.otp\n        ? user.otp\n        : Math.floor(Math.random() * 90000) + 10000;\n\n      const text = `Your account has been created click on the link to login ${\n        req.origin}/home?otp=${otp}&id=${user.mobile}`;\n\n      if (user.mobile) sms({ to: user.mobile, text });\n      db.User\n        .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n        .catch(err => logger.error('user.ctrl/otp', err));\n      return res.json({ message: 'success', id: user.id });\n    })\n    .catch(next);\n}\n\nexport function loginUid(req, res, next) {\n  return res.status(500).json({});\n}\n\nexport function addSellingRootUser(req, res, next) {\n  const { userId, routeId, limit } = req.body;\n  if (!userId || !routeId || !limit || req.user.roleId !== 1) {\n    return res.status(404).json({ message: 'Invalid Request.' });\n  }\n  return db.Selling.create({ userId,\n    routeId,\n    limit: Number(limit),\n    createdBy: req.user.id,\n    updatedBy: req.user.id })\n    .then(() => res.status(202).end())\n    .catch(next);\n}\n\nexport function addSelling(req, res, next) {\n  const { userId, sendingUserId, routeId, limit, fromUserId } = req.body;\n  if (!userId || !sendingUserId || !routeId || !limit) {\n    return res.status(404).json({ message: 'Invalid Request.' });\n  }\n  if (req.user[`sellingBalance${getRouteType(routeId)}`] < limit) {\n    return res.status(404).json({ message: 'Limit Exceeded.' });\n  }\n  return db.Selling.create({ userId,\n    sendingUserId,\n    routeId,\n    limit: Number(limit),\n    fromUserId: fromUserId || req.user.id,\n    createdBy: req.user.id,\n    updatedBy: req.user.id })\n    .then(() => res.status(202).end())\n    .catch(next);\n}\n"]}