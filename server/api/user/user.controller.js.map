{"version":3,"sources":["api/user/user.controller.js"],"names":["me","index","show","showUuid","create","createCustomer","signup","googleLogin","login","refresh","logout","duplicate","update","checkExists","otpLogin","otpSend","otpVerify","passwordChange","sendLogin","loginUid","addSellingRootUser","addSelling","req","res","next","User","findById","user","id","attributes","raw","then","json","u","catch","query","limit","offset","fl","where","options","split","Number","reduce","nxt","x","key","value","all","findAll","count","users","numFound","items","meta","roleId","find","params","data","LoginIdentifier","uuid","include","model","required","loginIdentifier","status","message","body","mobile","length","supportMobile","roldeId","createdBy","otp","Math","floor","random","email","resolve","authorization","get","Buffer","from","toString","clientId","clientSecret","App","app","name","password","$or","appId","push","end","getApp","code","AuthCode","auth_code","authCode","toJSON","method","uri","OAUTH_SERVER","OAUTH_ENDPOINT","auth","pass","headers","connection","remoteAddress","form","grant_type","username","console","log","err","url","redirect_uri","redirectUri","post","apires","statusCode","send","RefreshToken","refreshToken","refresh_token","revokeToken","access_token","up","findOrCreate","newUser","otpStatus","text","to","error","error_description","revokeTokens","origin","userId","routeId","Selling","updatedBy","sendingUserId","fromUserId"],"mappings":"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","file":"user.controller.js","sourcesContent":["import request from 'request';\nimport rp from 'request-promise';\nimport config from '../../config/environment';\nimport logger from '../../components/logger';\nimport { sms, slack } from '../../components/notify';\nimport oAuthModel from '../../components/oauth/model';\nimport { getRouteType } from '../../conn/sqldb/helper';\n\nimport db from '../../conn/sqldb';\n\nexport function me(req, res, next) {\n  return db.User\n    .findById(req.user.id, {\n      attributes: ['mobile', 'email', 'name', 'id', 'roleId'],\n      raw: 'true',\n    })\n    .then(u => res.json(u))\n    .catch(next);\n}\n\n\nexport function index(req, res, next) {\n  const { limit = 20, offset = 0, fl, where } = req.query;\n\n  const options = {\n    attributes: fl ? fl.split(',') : ['id'],\n    limit: Number(limit),\n    offset: Number(offset),\n  };\n\n  if (where) {\n    options.where = where.split(',').reduce((nxt, x) => {\n      const [key, value] = x.split(':');\n      return Object.assign(nxt, { [key]: value });\n    }, {});\n  }\n\n  return Promise\n    .all([\n      db.User\n        .findAll(options),\n      db.User\n        .count(),\n    ])\n    .then(([users, numFound]) => res.json({ items: users, meta: { numFound } }))\n    .catch(next);\n}\n\nexport function show(req, res, next) {\n  switch (req.user.roleId) {\n    case 1:\n    case 2: {\n      return db.User\n        .find({\n          where: { id: req.params.id },\n        })\n        .then(data => res.json(data))\n        .catch(next);\n    }\n    default: {\n      return db.User\n        .find({\n          where: { id: req.params.id },\n          attributes: ['id', 'name', 'email', 'mobile'],\n        })\n        .then(data => res.json(data))\n        .catch(next);\n    }\n  }\n\n}\n\nexport function showUuid(req, res, next) {\n  return db.LoginIdentifier\n    .find({\n      where: { uuid: req.params.uuid },\n      attributes: ['id'],\n      include: [{\n        model: db.User,\n        attributes: ['id', 'mobile', 'otp'],\n        required: true,\n      }],\n    })\n    .then((loginIdentifier) => {\n      if (!loginIdentifier) return res.status(404).json({ message: 'Invalid Request' });\n      return res.json(loginIdentifier.User);\n    })\n    .catch(next);\n}\n\nexport function create(req, res, next) {\n  const user = req.body;\n  if (`${user.mobile}`.length === 10) user.mobile = Number(`91${user.mobile}`);\n  if (`${user.supportMobile}`.length === 10) user.supportMobile = Number(`91${user.supportMobile}`);\n  user.roleId = user.roldeId || 2;\n  user.createdBy = req.user.id;\n  return db.User\n    .create(user)\n    .then(data => res.json(data))\n    .catch(next);\n}\n\nexport function createCustomer(req, res, next) {\n  const user = req.body;\n  user.roleId = 5;\n  user.createdBy = req.user.id;\n  user.otp = Math.floor(Math.random() * 90000) + 10000;\n  delete user.id;\n  return db.User\n    .find({ where: { email: user.email, createdBy: user.createdBy, roleId: user.roleId } })\n    .then(data => (data\n      ? Promise.resolve(data)\n      : db.User.create(user)))\n    .then(data => res.json(data))\n    .catch(next);\n}\n\nexport function signup(req, res, next) {\n  const authorization = req.get('authorization');\n  if (!authorization) return res.status(404).json({ message: 'Unauthorized Access.' });\n  const [clientId, clientSecret] = Buffer.from(authorization.split(' ')[1], 'base64')\n    .toString('ascii').split(':');\n  return db.App\n    .find({ attributes: ['id'], where: { clientId, clientSecret } })\n    .then(app => {\n      if (!app) return res.status(500).json({ message: 'Invalid Authentication.' });\n      const { name, email, mobile } = req.body;\n      let { roleId } = req.body;\n      if (!roleId) roleId = 4;\n      let { password } = req.body;\n      const otp = Math.floor(Math.random() * 90000) + 10000;\n      if (!password) password = otp;\n      const where = { $or: [], appId: app.id };\n      if (email) where.$or.push({ email });\n      if (mobile) where.$or.push({ mobile });\n      return db.User.find({ where })\n        .then(user => (user\n          ? res.status(409).end()\n          : db.User.create({ name, email, mobile, otp, password, appId: app.id, roleId })\n            .then(() => res.end())));\n    })\n    .catch(next);\n}\n\nfunction getApp(code) {\n  return db.AuthCode.find({ where: { auth_code: code }, include: [db.App] })\n    .then(authCode => authCode.App.toJSON());\n}\n\nexport function googleLogin(req, res, next) {\n  const authorization = req.get('authorization');\n  if (!authorization) return res.status(404).json({ message: 'Unauthorized Access.' });\n  const [clientId, clientSecret] = Buffer.from(authorization.split(' ')[1], 'base64')\n    .toString('ascii').split(':');\n  return db.App\n    .find({ attributes: ['id', 'clientId', 'clientSecret'], where: { clientId, clientSecret } })\n    .then(app => {\n      if (!app) return res.status(500).json({ message: 'Invalid Authentication.' });\n      const { email } = req.body;\n      return db.User\n        .find({ attributes: ['email', 'otp'], where: { email, appId: app.id } })\n        .then(user => {\n          if (!user) return res.status(500).json({ message: 'user not found' });\n          const options = {\n            method: 'POST',\n            uri: `${config.OAUTH_SERVER}${config.OAUTH_ENDPOINT}`,\n            auth: {\n              user: app.clientId,\n              pass: app.clientSecret,\n            },\n            headers: {\n              'user-agent': req.headers['user-agent'],\n              'x-forwarded-for': req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n            },\n            form: {\n              grant_type: 'password',\n              username: user.email,\n              password: user.otp,\n            },\n            json: true,\n          };\n          return rp(options).then(data => res.json(data));\n        });\n    })\n    .catch(err => console.log(err));\n}\n\nexport function login(req, res, next) {\n  const { code } = req.body;\n  return (code\n    ? getApp(code)\n    : db.App.findById(1, { raw: true }))\n    .then((app) => {\n      const options = {\n        url: `${config.OAUTH_SERVER}${config.OAUTH_ENDPOINT}`,\n        auth: {\n          user: app.clientId,\n          pass: app.clientSecret,\n        },\n        headers: {\n          'user-agent': req.headers['user-agent'],\n          'x-forwarded-for': req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        },\n      };\n\n      options.form = code\n        ? { grant_type: 'authorization_code', redirect_uri: `${app.redirectUri}`, code }\n        : { grant_type: 'password', username: req.body.username, password: req.body.password };\n\n      request.post(options, (err, apires, body) => {\n        if (err) return res.status(500).json({ err, body });\n        return res.status(apires.statusCode).send(body);\n      });\n    });\n}\n\nexport function refresh(req, res, next) {\n  return db.App\n    .find({\n      include: [{\n        model: db.RefreshToken,\n        where: { refreshToken: req.body.refresh_token },\n        required: true,\n      }],\n    })\n    .then((app) => {\n      if (!app) return res.status(400).json({ message: 'Invalid Token' });\n      const options = {\n        url: `${config.OAUTH_SERVER}${config.OAUTH_ENDPOINT}`,\n        auth: {\n          user: app.clientId,\n          pass: app.clientSecret,\n        },\n        form: {\n          grant_type: 'refresh_token',\n          refresh_token: req.body.refreshToken,\n        },\n        headers: {\n          'user-agent': req.headers['user-agent'],\n          'x-forwarded-for': req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        },\n      };\n      return request\n        .post(options, (err, apires, body) => {\n          if (err) return res.status(500).send(err);\n          return res.status(apires.statusCode).send(body);\n        });\n    });\n}\n\nexport function logout(req, res, next) {\n  return oAuthModel\n    .revokeToken(req.body.access_token)\n    .then(up => res.status(200).json(up))\n    .catch(next);\n}\n\nexport function duplicate(req, res, next) {\n  const mobile = `91${req.query.mobile}`;\n  return db.User\n    .count({ where: { mobile } })\n    .then(data => res.json({ mobile: !!data }))\n    .catch(next);\n}\n\nexport function update(req, res, next) {\n  const id = req.user.id || req.params.id;\n  const user = req.body;\n  delete user.id;\n  return db.User\n    .update(user, { where: { id } })\n    .then(() => res.json({ id }))\n    .catch(next);\n}\n\n// Check email and phone exists\nexport function checkExists(req, res, next) {\n  return db.User\n    .checkExists(db, req.query.email, req.query.mobile)\n    .then(status => res.json(status))\n    .catch(next);\n}\n\nexport function otpLogin(req, res, next) {\n  return db.User\n    .findOrCreate({\n      where: {\n        mobile: req.body.username || req.body.mobile,\n      },\n      attributes: ['id', 'otpStatus', 'otp', 'mobile'],\n    }).then(([user, newUser]) => {\n      if (!user) {\n        return res.status(400).json({\n          message: 'User Details not matching with our records. Please contact support',\n        });\n      }\n\n      const otp = user.otpStatus === 1 && user.otp\n        ? user.otp\n        : Math.floor(Math.random() * 90000) + 10000;\n\n      const text = `${otp} is your OTP. Treat this as confidential. Sharing it with anyone gives` +\n        'them full access to your account. We never call you to verify OTP.';\n      if (user.mobile) sms({ to: user.mobile, text });\n      db.User\n        .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n        .catch(err => logger.error('user.ctrl/otp', err));\n      return res.json({ message: 'success', id: user.id, newUser });\n    }).catch(next);\n}\n\nexport function otpSend(req, res, next) {\n  db.User.find({\n    where: {\n      $or: {\n        email: req.body.username,\n        mobile: req.body.username,\n      },\n    },\n    attributes: ['id', 'otpStatus', 'otp', 'mobile'],\n  }).then((user) => {\n    if (!user) {\n      return res.status(400).json({\n        message: 'User Details not matching with our records. Please contact support',\n      });\n    }\n\n    const otp = user.otpStatus === 1 && user.otp\n      ? user.otp\n      : Math.floor(Math.random() * 90000) + 10000;\n\n    const text = `${otp} is your OTP. Treat this as confidential. Sharing it with anyone gives` +\n      'them full access to your account. We never call you to verify OTP.';\n    if (user.mobile) sms({ to: user.mobile, text });\n    db.User\n      .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n      .catch(err => logger.error('user.ctrl/otp', err));\n    return res.json({ message: 'success', id: user.id });\n  }).catch(next);\n}\n\nexport function otpVerify(req, res, next) {\n  db.User.find({\n    attributes: ['id'],\n    where: {\n      $or: [{ id: req.body.id }, { mobile: req.body.mobile }],\n      otp: req.body.otp,\n    },\n  })\n    .then((user) => {\n      if (!user) return res.status(400).json({ error_description: 'Invalid OTP' });\n      user\n        .update({ otpStatus: 0 })\n        .catch(err => logger.error('user.ctrl/otpVerify', err));\n      return res.json({ message: 'success', id: user.id });\n    }).catch(next);\n}\n\n\n// Creates a new User in the DB\nexport function passwordChange(req, res, next) {\n  return db.User.find({\n    where: {\n      id: req.body.id,\n      otp: req.body.otp,\n    },\n    attributes: ['id', 'mobile', 'email', 'name'],\n  }).then((u) => {\n    if (!u) {\n      return res\n        .status(400)\n        .json({ error: 'Invalid password', error_description: 'Invalid current password' });\n    }\n\n    return u.update({ password: req.body.password })\n      .then(() => {\n        res.status(204).end();\n        u.revokeTokens(db); // revoke all\n        const { id, name, mobile, email } = u;\n        return slack(`Password change: ${id}, ${name}, ${mobile}, ${email}`);\n      });\n  })\n    .catch(next);\n}\n\nexport function sendLogin(req, res, next) {\n  return db.User\n    .find({ where: { id: req.params.id } })\n    .then((user) => {\n      if (!user) return res.status(404).end();\n      const otp = user.otpStatus === 1 && user.otp\n        ? user.otp\n        : Math.floor(Math.random() * 90000) + 10000;\n\n      const text = `Your account has been created click on the link to login ${\n        req.origin}/home?otp=${otp}&id=${user.mobile}`;\n\n      if (user.mobile) sms({ to: user.mobile, text });\n      db.User\n        .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n        .catch(err => logger.error('user.ctrl/otp', err));\n      return res.json({ message: 'success', id: user.id });\n    })\n    .catch(next);\n}\n\nexport function loginUid(req, res, next) {\n  return res.status(500).json({});\n}\n\nexport function addSellingRootUser(req, res, next) {\n  const { userId, routeId, limit } = req.body;\n  if (!userId || !routeId || !limit || req.user.roleId !== 1) {\n    return res.status(404).json({ message: 'Invalid Request.' });\n  }\n  return db.Selling.create({ userId,\n    routeId,\n    limit: Number(limit),\n    createdBy: req.user.id,\n    updatedBy: req.user.id })\n    .then(() => res.status(202).end())\n    .catch(next);\n}\n\nexport function addSelling(req, res, next) {\n  const { userId, sendingUserId, routeId, limit, fromUserId } = req.body;\n  if (!userId || !sendingUserId || !routeId || !limit) {\n    return res.status(404).json({ message: 'Invalid Request.' });\n  }\n  if (req.user[`sellingBalance${getRouteType(routeId)}`] < limit) {\n    return res.status(404).json({ message: 'Limit Exceeded.' });\n  }\n  return db.Selling.create({ userId,\n    sendingUserId,\n    routeId,\n    limit: Number(limit),\n    fromUserId: fromUserId || req.user.id,\n    createdBy: req.user.id,\n    updatedBy: req.user.id })\n    .then(() => res.status(202).end())\n    .catch(next);\n}\n"]}