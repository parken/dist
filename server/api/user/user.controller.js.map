{"version":3,"sources":["api/user/user.controller.js"],"names":["me","index","show","showUuid","create","signup","login","refresh","logout","duplicate","update","checkExists","otpLogin","otpSend","otpVerify","passwordChange","sendLogin","loginUid","addSellingRootUser","addSelling","handleError","res","argStatusCode","err","error","statusCode","status","send","req","User","findById","user","id","attributes","raw","then","json","u","catch","findAll","data","find","where","params","LoginIdentifier","uuid","include","model","required","loginIdentifier","message","body","mobile","length","supportMobile","groupId","createdBy","name","password","otp","email","error_description","otpStatus","end","getApp","code","AuthCode","auth_code","App","authCode","toJSON","app","options","url","OAUTH_SERVER","OAUTH_ENDPOINT","auth","clientId","pass","clientSecret","headers","connection","remoteAddress","form","grant_type","redirect_uri","redirectUri","username","post","apires","RefreshToken","refreshToken","refresh_token","next","revokeToken","access_token","up","query","count","alternateMobile","findOrCreate","newUser","Math","floor","random","text","to","$or","revokeTokens","origin","userId","routeId","limit","roleId","Selling","updatedBy","sendingUserId","fromUserId"],"mappings":"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","file":"user.controller.js","sourcesContent":["import request from 'request';\n\nimport config from '../../config/environment';\nimport logger from '../../components/logger';\nimport { sms, slack } from '../../components/notify';\nimport oAuthModel from '../../components/oauth/model';\nimport { getRouteType } from '../../conn/sqldb/helper';\n\nimport db from '../../conn/sqldb';\n\nfunction handleError(res, argStatusCode, err) {\n  logger.error('user.controller', err);\n  const statusCode = argStatusCode || 500;\n  res.status(statusCode).send(err);\n}\n\nexport function me(req, res) {\n  return db.User\n    .findById(req.user.id, {\n      attributes: ['mobile', 'email', 'name', 'id', 'roleId', 'admin'],\n      raw: 'true',\n    })\n    .then(u => res.json(u))\n    .catch(err => handleError(res, 500, err));\n}\n\n\nexport function index(req, res) {\n  return db.User\n    .findAll()\n    .then(data => res.json(data))\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function show(req, res) {\n  return db.User\n    .find({\n      where: { id: req.params.id },\n      attributes: ['id', 'name', 'email', 'mobile'],\n    })\n    .then(data => res.json(data))\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function showUuid(req, res) {\n  return db.LoginIdentifier\n    .find({\n      where: { uuid: req.params.uuid },\n      attributes: ['id'],\n      include: [{\n        model: db.User,\n        attributes: ['id', 'mobile', 'otp'],\n        required: true,\n      }],\n    })\n    .then((loginIdentifier) => {\n      if (!loginIdentifier) return res.status(404).json({ message: 'Invalid Request' });\n      return res.json(loginIdentifier.User);\n    })\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function create(req, res) {\n  const user = req.body;\n  if (`${user.mobile}`.length === 10) user.mobile += 910000000000;\n  if (`${user.supportMobile}`.length === 10) user.supportMobile += 910000000000;\n  user.groupId = 2;\n  user.createdBy = req.user.id;\n  return db.User\n    .create(user)\n    .then(data => res.json(data))\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function signup(req, res) {\n  const { id, name, password, otp, email } = req.body;\n  db.User.find({\n    attributes: ['id'],\n    where: { id, otp },\n  })\n    .then((u) => {\n      if (!u) return res.status(400).json({ error_description: 'Invalid OTP' });\n      u\n        .update({ otpStatus: 0, name, password, email })\n        .catch(err => logger.error('user.ctrl/otpVerify', err));\n      slack(`Signup: ${u.id}, ${u.name}, ${u.mobile}, ${u.email}`);\n      return res.status(201).end();\n    }).catch(err => handleError(res, 500, err));\n}\n\nfunction getApp(code) {\n  return db.AuthCode.find({ where: { auth_code: code }, include: [db.App] })\n    .then(authCode => authCode.App.toJSON());\n}\n\nexport function login(req, res) {\n  const { code } = req.body;\n  return (code\n    ? getApp(code)\n    : db.App.findById(1, { raw: true }))\n    .then((app) => {\n      const options = {\n        url: `${config.OAUTH_SERVER}${config.OAUTH_ENDPOINT}`,\n        auth: {\n          user: app.clientId,\n          pass: app.clientSecret,\n        },\n        headers: {\n          'user-agent': req.headers['user-agent'],\n          'x-forwarded-for': req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        },\n      };\n\n      options.form = code\n        ? { grant_type: 'authorization_code', redirect_uri: `${app.redirectUri}`, code }\n        : { grant_type: 'password', username: req.body.username, password: req.body.password };\n\n      request.post(options, (err, apires, body) => {\n        if (err) return res.status(500).json({ err, body });\n        return res.status(apires.statusCode).send(body);\n      });\n    });\n}\n\nexport function refresh(req, res) {\n  return db.App\n    .find({\n      include: [{\n        model: db.RefreshToken,\n        where: { refreshToken: req.body.refresh_token },\n        required: true,\n      }],\n    })\n    .then((app) => {\n      if (!app) return res.status(400).json({ message: 'Invalid Token' });\n      const options = {\n        url: `${config.OAUTH_SERVER}${config.OAUTH_ENDPOINT}`,\n        auth: {\n          user: app.clientId,\n          pass: app.clientSecret,\n        },\n        form: {\n          grant_type: 'refresh_token',\n          refresh_token: req.body.refreshToken,\n        },\n        headers: {\n          'user-agent': req.headers['user-agent'],\n          'x-forwarded-for': req.headers['x-forwarded-for'] || req.connection.remoteAddress,\n        },\n      };\n      return request\n        .post(options, (err, apires, body) => {\n          if (err) return res.status(500).send(err);\n          return res.status(apires.statusCode).send(body);\n        });\n    });\n}\n\nexport function logout(req, res, next) {\n  return oAuthModel\n    .revokeToken(req.body.access_token)\n    .then(up => res.status(200).json(up))\n    .catch(next);\n}\n\nexport function duplicate(req, res) {\n  const mobile = `91${req.query.mobile}`;\n  return db.User\n    .count({ where: { mobile } })\n    .then(data => res.json({ mobile: !!data }))\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function update(req, res) {\n  const id = req.user.id || req.params.id;\n  const user = req.body;\n  delete user.id;\n  if (req.user.id) {\n    delete user.alternateMobile;\n  }\n  return db.User\n    .update(user, {\n      where: {\n        id,\n      },\n    })\n    .then(() => res.json({ id }))\n    .catch(err => handleError(res, 500, err));\n}\n\n// Check email and phone exists\nexport function checkExists(req, res) {\n  return db.User\n    .checkExists(db, req.query.email, req.query.mobile)\n    .then(status => res.json(status))\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function otpLogin(req, res) {\n  return db.User\n    .findOrCreate({\n      where: {\n        mobile: req.body.username || req.body.mobile,\n      },\n      attributes: ['id', 'otpStatus', 'otp', 'mobile'],\n    }).then(([user, newUser]) => {\n      if (!user) {\n        return res.status(400).json({\n          message: 'User Details not matching with our records. Please contact support',\n        });\n      }\n\n      const otp = user.otpStatus === 1 && user.otp\n        ? user.otp\n        : Math.floor(Math.random() * 90000) + 10000;\n\n      const text = `${otp} is your OTP. Treat this as confidential. Sharing it with anyone gives` +\n        'them full access to your account. We never call you to verify OTP.';\n      if (user.mobile) sms({ to: user.mobile, text });\n      db.User\n        .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n        .catch(err => logger.error('user.ctrl/otp', err));\n      return res.json({ message: 'success', id: user.id, newUser });\n    }).catch(err => handleError(res, 500, err));\n}\n\nexport function otpSend(req, res) {\n  db.User.find({\n    where: {\n      $or: {\n        email: req.body.username,\n        mobile: req.body.username,\n      },\n    },\n    attributes: ['id', 'otpStatus', 'otp', 'mobile'],\n  }).then((user) => {\n    if (!user) {\n      return res.status(400).json({\n        message: 'User Details not matching with our records. Please contact support',\n      });\n    }\n\n    const otp = user.otpStatus === 1 && user.otp\n      ? user.otp\n      : Math.floor(Math.random() * 90000) + 10000;\n\n    const text = `${otp} is your OTP. Treat this as confidential. Sharing it with anyone gives` +\n      'them full access to your account. We never call you to verify OTP.';\n    if (user.mobile) sms({ to: user.mobile, text });\n    db.User\n      .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n      .catch(err => logger.error('user.ctrl/otp', err));\n    return res.json({ message: 'success', id: user.id });\n  }).catch(err => handleError(res, 500, err));\n}\n\nexport function otpVerify(req, res) {\n  db.User.find({\n    attributes: ['id'],\n    where: {\n      $or: [{ id: req.body.id }, { mobile: req.body.mobile }],\n      otp: req.body.otp,\n    },\n  })\n    .then((user) => {\n      if (!user) return res.status(400).json({ error_description: 'Invalid OTP' });\n      user\n        .update({ otpStatus: 0 })\n        .catch(err => logger.error('user.ctrl/otpVerify', err));\n      return res.json({ message: 'success', id: user.id });\n    }).catch(err => handleError(res, 500, err));\n}\n\n\n// Creates a new User in the DB\nexport function passwordChange(req, res) {\n  return db.User.find({\n    where: {\n      id: req.body.id,\n      otp: req.body.otp,\n    },\n    attributes: ['id', 'mobile', 'email', 'name'],\n  }).then((u) => {\n    if (!u) {\n      return res\n        .status(400)\n        .json({ error: 'Invalid password', error_description: 'Invalid current password' });\n    }\n\n    return u.update({ password: req.body.password })\n      .then(() => {\n        res.status(204).end();\n        u.revokeTokens(db); // revoke all\n        const { id, name, mobile, email } = u;\n        return slack(`Password change: ${id}, ${name}, ${mobile}, ${email}`);\n      });\n  })\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function sendLogin(req, res) {\n  return db.User\n    .find({ where: { id: req.params.id } })\n    .then((user) => {\n      if (!user) return res.status(404).end();\n      const otp = user.otpStatus === 1 && user.otp\n        ? user.otp\n        : Math.floor(Math.random() * 90000) + 10000;\n\n      const text = `Your account has been created click on the link to login ${\n        req.origin}/home?otp=${otp}&id=${user.mobile}`;\n\n      if (user.mobile) sms({ to: user.mobile, text });\n      db.User\n        .update({ otp, otpStatus: 1 }, { where: { id: user.id } })\n        .catch(err => logger.error('user.ctrl/otp', err));\n      return res.json({ message: 'success', id: user.id });\n    })\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function loginUid(req, res) {\n  return res.status(500).json({});\n}\n\nexport function addSellingRootUser(req, res) {\n  const { userId, routeId, limit } = req.body;\n  if (!userId || !routeId || !limit || req.user.roleId !== 1) {\n    return res.status(404).json({ message: 'Invalid Request.' });\n  }\n  return db.Selling.create({ userId,\n    routeId,\n    limit,\n    createdBy: req.user.id,\n    updatedBy: req.user.id })\n    .then(() => res.status(202).end())\n    .catch(err => handleError(res, 500, err));\n}\n\nexport function addSelling(req, res) {\n  const { userId, sendingUserId, routeId, limit, fromUserId } = req.body;\n  if (!userId || !sendingUserId || !routeId || !limit) {\n    return res.status(404).json({ message: 'Invalid Request.' });\n  }\n  if (req.user[`sellingBalance${getRouteType(routeId)}`] < limit) {\n    return res.status(404).json({ message: 'Limit Exceeded.' });\n  }\n  return db.Selling.create({ userId,\n    sendingUserId,\n    routeId,\n    limit,\n    fromUserId: fromUserId || req.user.id,\n    createdBy: req.user.id,\n    updatedBy: req.user.id })\n    .then(() => res.status(202).end())\n    .catch(err => handleError(res, 500, err));\n}\n"]}