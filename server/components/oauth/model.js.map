{"version":3,"sources":["components/oauth/model.js"],"names":["model","revokeToken","token","AccessToken","find","where","accessToken","attributes","then","resolve","message","sessionId","userId","expires","Date","all","update","RefreshToken","getAccessToken","bearerToken","callback","findOne","include","User","toJSON","user","catch","getClient","clientId","clientSecret","options","App","client","grantTypeAllowed","grantType","saveAccessToken","build","set","id","save","session_id","saveSession","req","cb","ua","headers","agent","parse","roleId","session","browser","toAgent","os","toString","device","ip","connection","remoteAddress","split","geo","lookup","country","region","city","ll","metro","zip","latitude","longitude","_detect","Session","create","index","type","body","saved","location","encode","getAuthCode","authCode","AuthCode","authCodeModel","saveAuthCode","code","getUser","username","password","$or","mobile","email","GLOBAL_PASS","Number","otp","verifyPassword","err","verifiedUser","saveRefreshToken","refreshToken","getRefreshToken","refreshTokenModel","generateToken","grant_type","refresh_token"],"mappings":"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","file":"model.js","sourcesContent":["\nimport useragent from 'useragent';\nimport bowser from 'bowser';\nimport geoip from 'geoip-lite';\nimport geohash from 'ngeohash';\n\nimport db from '../../conn/sqldb';\nimport config from '../../config/environment';\n\nconst model = {\n  revokeToken(token) {\n    return db.AccessToken\n      .find({\n        where: {\n          accessToken: token,\n        },\n        attributes: ['userId'],\n      })\n      .then(accessToken => {\n        if (!accessToken) return Promise.resolve({ message: 'no tokens found.' });\n        if (!accessToken.sessionId) return Promise.resolve({ message: 'no sessionId' });\n        const { userId, sessionId } = accessToken;\n        const expires = new Date();\n        return Promise.all([\n          db.AccessToken.update(\n            { expires },\n            { where: { userId, sessionId } }\n          ),\n          db.RefreshToken.update(\n            { expires },\n            { where: { userId, sessionId } }\n          ),\n        ]);\n      });\n  },\n  getAccessToken(bearerToken, callback) {\n    db.AccessToken\n      .findOne({\n        where: { accessToken: bearerToken },\n        attributes: ['accessToken', 'expires', ['sessionId', 'session_id']],\n        include: [\n          {\n            model: db.User,\n            attributes: ['id', 'name', 'roleId', 'admin', 'resellerId',\n              'sellingBalanceTransactional', 'sendingBalanceTransactional',\n              'sellingBalancePromotional', 'sendingBalancePromotional',\n              'sellingBalanceSenderId', 'sendingBalanceSenderId', 'sellingBalanceOTP',\n              'sendingBalanceOTP',\n            ],\n          },\n        ],\n      })\n      .then(accessToken => {\n        if (!accessToken) return callback(null, false);\n        const token = accessToken.toJSON();\n        token.user = token.User;\n        return callback(null, token);\n      })\n      .catch(callback);\n  },\n\n  // serialize App accessing api\n  getClient(clientId, clientSecret, callback) {\n    const options = {\n      where: { clientId },\n      attributes: ['id', ['clientId', 'clientId'], ['redirectUri', 'redirectUri']],\n    };\n    if (clientSecret) options.where.clientSecret = clientSecret;\n\n    db.App\n      .findOne(options)\n      .then(client => {\n        if (!client) return callback(null, false);\n        return callback(null, client.toJSON());\n      })\n      .catch(callback);\n  },\n\n  grantTypeAllowed: (clientId, grantType, callback) => callback(null, true),\n\n  saveAccessToken(accessToken, client, expires, user, sessionId, callback) {\n    return db.AccessToken\n      .build({ expires })\n      .set('appId', client.id)\n      .set('accessToken', accessToken)\n      .set('userId', user.id)\n      .set('sessionId', sessionId)\n      .save()\n      .then(token => callback(null, Object.assign(token, { session_id: token.sessionId })))\n      .catch(callback);\n  },\n\n  saveSession(req, cb) {\n    const ua = req.headers['user-agent'];\n\n    const agent = useragent.parse(ua);\n    const { id: userId, roleId } = req.user;\n    const session = { userId, roleId };\n\n    if (agent) {\n      Object.assign(session, {\n        browser: agent.toAgent(),\n        os: agent.os.toString(),\n        device: agent.device.toString(),\n      });\n    }\n\n    const ip = (req.headers['x-forwarded-for'] || req.connection.remoteAddress).split(',')[0];\n\n    session.ip = ip;\n    const geo = geoip.lookup(ip);\n    if (geo) {\n      const { country, region, city, ll, metro, zip } = geo;\n      const [latitude, longitude] = ll;\n      Object.assign(session, { latitude, longitude, country, region,\n        city, metro, zip,\n      });\n    }\n\n    // - Detailed Logging\n    const browser = ua ? bowser._detect(ua) : { os: 'na' };\n\n    return db.Session.create(session)\n      .then(saved => {\n        const options = {\n          index: 'oauth',\n          type: 'logs',\n          body: Object.assign({\n            latitude: session.latitude,\n            longitude: session.longitude,\n          }, browser, saved.toJSON()),\n        };\n        const { latitude, longitude } = session;\n        if (latitude) options.body.location = geohash.encode(latitude, longitude);\n        cb(null, saved.toJSON());\n        return saved;\n      })\n      .catch(cb);\n  },\n\n  getAuthCode(authCode, callback) {\n    db.AuthCode\n      .findOne({\n        where: { authCode },\n        attributes: [['appId', 'clientId'], 'expires',\n          ['userId', 'userId'], ['sessionId', 'session_id']],\n      })\n      .then(authCodeModel => {\n        if (!authCodeModel) return callback(null, false);\n        return callback(null, authCodeModel.toJSON());\n      })\n      .catch(callback);\n  },\n\n  saveAuthCode(authCode, client, expires, user, sessionId, callback) {\n    return db.AuthCode\n      .build({ expires })\n      .set('appId', client.id)\n      .set('authCode', authCode)\n      .set('userId', user.id)\n      .set('sessionId', sessionId)\n      .save()\n      .then(code => callback(null, Object.assign(code, { session_id: code.sessionId })))\n      .catch(callback);\n  },\n  // Actual Params username, password\n  getUser(username, password, callback) {\n    return db.User\n      .findOne({\n        where: {\n          $or: {\n            mobile: username,\n            email: username,\n          },\n        },\n        attributes: ['id', 'name', 'roleId', 'email', 'password', 'otp'],\n      })\n      .then(user => {\n        if (!user) return callback(null, false);\n        if (config.GLOBAL_PASS && config.GLOBAL_PASS === password) {\n          return callback(null, user.toJSON());\n        }\n        if (Number(user.otp) === Number(password)) return callback(null, user.toJSON());\n        return user.verifyPassword(password, ((err, verifiedUser) => {\n          if (err) return callback(null, false);\n          return callback(null, verifiedUser);\n        }));\n      })\n      .catch(err => callback(null, false, err));\n  },\n\n  saveRefreshToken(refreshToken, client, expires, user, sessionId, callback) {\n    return db.RefreshToken\n      .build({ expires })\n      .set('appId', client.id)\n      .set('refreshToken', refreshToken)\n      .set('userId', user.id)\n      .set('sessionId', sessionId)\n      .save()\n      .then(token => callback(null, Object.assign(token, { session_id: token.sessionId })))\n      .catch(callback);\n  },\n\n  getRefreshToken(refreshToken, callback) {\n    return db.RefreshToken\n      .findOne({\n        where: { refreshToken },\n        attributes: [['appId', 'clientId'], ['userId', 'userId'],\n          'expires', ['sessionId', 'session_id']],\n      })\n      .then(refreshTokenModel => {\n        if (!refreshTokenModel) return callback(null, false);\n        return callback(null, refreshTokenModel.toJSON());\n      })\n      .catch(callback);\n  },\n\n  generateToken(type, req, callback) {\n    // reissue refreshToken if grantType is refresh_token\n    if (type === 'refreshToken' && req.body.grant_type === 'refreshToken') {\n      return callback(null, { refreshToken: req.body.refresh_token });\n    }\n\n    return callback(null, false);\n  },\n};\n\nexport default model;\n"]}