{"version":3,"sources":["components/senderId/index.js"],"names":["notifyAdminSenderIdApproval","senderId","User","find","where","admin","then","user","reject","message","text","name","company","PLAY_URL","id","userId","SenderId","createSenderId","findAll","promise","newObj","createdBy","updatedBy","senderIds","length","create","blockedSenderId","filter","x","status","approvedSenderId","resolve","data","getSenderId","attributes","userSenderId"],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA,SAASA,2BAAT,CAAqCC,QAArC,EAA+C;AAC7C,SAAO,gBAAGC,IAAH,CAAQC,IAAR,CAAa,EAAEC,OAAO,EAAEC,OAAO,CAAT,EAAT,EAAb,EACJC,IADI,CACC,UAACC,IAAD,EAAU;AACd,QAAI,CAACA,IAAL,EAAW,OAAO,kBAAQC,MAAR,CAAe,EAAEC,SAAS,qBAAX,EAAf,CAAP;AACX,QAAMC,+BAA6BT,SAASU,IAAtC,WAAgDV,SAASW,OAAzD,UACJ,sBAAOC,QADH,kBACwBZ,SAASa,EADvC;AAEA,WAAO,iCAAoB,EAAEC,QAAQR,KAAKO,EAAf,EAAmBJ,UAAnB,EAApB,CAAP;AACD,GANI,CAAP;AAOD;;AAED,IAAMM,WAAW;AACfC,gBADe,0BACAhB,QADA,EACUc,MADV,EACkB;AAC/B,WAAO,gBAAGC,QAAH,CAAYE,OAAZ,CAAoB,EAAEd,OAAO,EAAEO,MAAMV,QAAR,EAAT,EAApB,EACJK,IADI,CACC,qBAAa;AACjB,UAAIa,gBAAJ;AACA,UAAMC,SAAS,EAAEC,WAAWN,MAAb,EAAqBO,WAAWP,MAAhC,EAAwCJ,MAAMV,QAA9C,EAAf;AACA,UAAI,CAACsB,UAAUC,MAAf,EAAuBL,UAAU,gBAAGH,QAAH,CAAYS,MAAZ,CAAmBL,MAAnB,CAAV;;AAEvB,UAAMM,kBAAkBH,UAAUI,MAAV,CAAiB;AAAA,eAAMC,EAAEC,MAAF,KAAa,CAAnB;AAAA,OAAjB,EAAwC,CAAxC,CAAxB;AACA,UAAMC,mBAAmBP,UAAUI,MAAV,CAAiB;AAAA,eAAMC,EAAEC,MAAF,KAAa,CAAnB;AAAA,OAAjB,EAAwC,CAAxC,CAAzB;AACA,UAAI,CAACH,eAAD,IAAoBI,gBAAxB,EAA0C;AACxCX,kBAAU,gBAAGH,QAAH,CAAYS,MAAZ,CAAmB,sBAAcL,MAAd,EAAsB;AACjDS,kBAAQC,iBAAiBD;AADwB,SAAtB,CAAnB,CAAV;AAGD;AACD,UAAI,CAACV,OAAL,EAAcA,UAAU,gBAAGH,QAAH,CAAYS,MAAZ,CAAmBL,MAAnB,CAAV;AACd,aAAOD,QACJb,IADI,CACC,gBAAQ;AACZN,oCAA4BC,QAA5B;AACA,eAAO,kBAAQ8B,OAAR,CAAgBC,IAAhB,CAAP;AACD,OAJI,CAAP;AAKD,KAnBI,CAAP;AAoBD,GAtBc;AAuBfC,aAvBe,uBAuBHhC,QAvBG,EAuBOc,MAvBP,EAuBe;AAC5B,WAAO,gBAAGC,QAAH,CAAYb,IAAZ,CAAiB;AACtB+B,kBAAY,CAAC,IAAD,EAAO,MAAP,EAAe,kBAAf,CADU;AAEtB9B,aAAO,EAAEO,MAAMV,QAAR,EAAkBoB,WAAWN,MAA7B;AAFe,KAAjB,EAGJT,IAHI,CAGC,wBAAgB;AACtB,UAAI,CAAC6B,YAAL,EAAmB,OAAOnB,SAASC,cAAT,CAAwBhB,QAAxB,EAAkCc,MAAlC,CAAP;AACnB,aAAO,kBAAQgB,OAAR,CAAgBI,YAAhB,CAAP;AACD,KANM,CAAP;AAOD;AA/Bc,CAAjB;;kBAkCenB,Q","file":"index.js","sourcesContent":["import db from '../../conn/sqldb';\nimport config from '../../config/environment';\nimport { notifyOnUserChannel } from '../../components/notify';\n\nfunction notifyAdminSenderIdApproval(senderId) {\n  return db.User.find({ where: { admin: 2 } })\n    .then((user) => {\n      if (!user) return Promise.reject({ message: 'No admin user found' });\n      const text = `Request to approve ${senderId.name} - ${senderId.company}. ${\n        config.PLAY_URL}/senderId/${senderId.id}`;\n      return notifyOnUserChannel({ userId: user.id, text });\n    });\n}\n\nconst SenderId = {\n  createSenderId(senderId, userId) {\n    return db.SenderId.findAll({ where: { name: senderId } })\n      .then(senderIds => {\n        let promise;\n        const newObj = { createdBy: userId, updatedBy: userId, name: senderId };\n        if (!senderIds.length) promise = db.SenderId.create(newObj);\n\n        const blockedSenderId = senderIds.filter(x => (x.status === 3))[0];\n        const approvedSenderId = senderIds.filter(x => (x.status === 2))[0];\n        if (!blockedSenderId && approvedSenderId) {\n          promise = db.SenderId.create(Object.assign(newObj, {\n            status: approvedSenderId.status,\n          }));\n        }\n        if (!promise) promise = db.SenderId.create(newObj);\n        return promise\n          .then(data => {\n            notifyAdminSenderIdApproval(senderId);\n            return Promise.resolve(data);\n          });\n      });\n  },\n  getSenderId(senderId, userId) {\n    return db.SenderId.find({\n      attributes: ['id', 'name', 'senderIdStatusId'],\n      where: { name: senderId, createdBy: userId },\n    }).then(userSenderId => {\n      if (!userSenderId) return SenderId.createSenderId(senderId, userId);\n      return Promise.resolve(userSenderId);\n    });\n  },\n};\n\nexport default SenderId;\n"]}